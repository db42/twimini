DB tables
1. User
id, email, password, name

2. post
id, user_id, post, time-stamp

3. Follow_list
id, user_id following, user_id follower

		db.update("CREATE TABLE user (" +
            "id INTEGER AUTO_INCREMENT PRIMARY KEY," +
			"name varchar(128) DEFAULT '' NOT NULL," +
            "email varchar(128) NOT NULL," +
            "password varchar(40) NOT NULL" +
            ")");
			
		db.update("CREATE TABLE post (" +
            "id INTEGER AUTO_INCREMENT PRIMARY KEY," +
			"FOREIGN KEY (user_id) REFERENCES user(id) ON DELETE RESTRICT ON UPDATE RESTRICT," +
            "post varchar(140) NOT NULL," +
            "time TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL" +
            ")");

		db.update("CREATE TABLE followers (" +
            "id INTEGER AUTO_INCREMENT PRIMARY KEY," +
			"FOREIGN KEY (user) REFERENCES user(id) ON DELETE RESTRICT ON UPDATE RESTRICT," +
            "FOREIGN KEY (follower) REFERENCES user(id) ON DELETE RESTRICT ON UPDATE RESTRICT" +
            ")");		




Pages:
1. Login - Register
2. Profile -> show user posts
3. Followers -> show followers list
4. Followings -> show following users list
5. Home -> show subscribed user's posts
6. Logout


Other work:
1. CSS/HTML designing
2. Javascript
3. JSON/ REST api
4. Optimizations
    - caching, backend db and all that